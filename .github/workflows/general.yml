name: Rust

on:
  push:
    branches:
      - main
  pull_request:
    types: [ opened, synchronize, reopened ]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      REFINERY_VERSION: 0.8.7
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Cache refinery_cli
        uses: actions/cache@v2
        id: cache-refinery
        with:
          path: |
            ~/.cargo/bin/refinery
            ~/.cargo/bin/cargo-refinery
          key: ${{ runner.os }}-refinery-${{ env.REFINERY_VERSION }}
      - name: Install refinery_cli
        uses: actions-rs/cargo@v1
        if: steps.cache-refinery.outputs.cache-hit == false
        with:
          command: install 
          args: >
            refinery_cli
            --force
            --version=${{ env.REFINERY_VERSION }}
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
    env:
      REFINERY_VERSION: 0.8.7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: clippy
          override: true

      - name: Cache refinery_cli
        uses: actions/cache@v2
        id: cache-refinery
        with:
          path: |
            ~/.cargo/bin/refinery
          key: ${{ runner.os }}-refinery-${{ env.REFINERY_VERSION }}

      - name: Install refinery_cli 
        uses: actions-rs/cargo@v1
        if: steps.cache-refinery.outputs.cache-hit == false
        with:
          command: install 
          args: >
            refinery_cli
            --force
            --version=${{ env.REFINERY_VERSION }}
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: newsletter
        ports:
          - 5432:5432
      redis:
        image: redis:6
        ports:
          - 6379:6379
    env:
      REFINERY_VERSION: 0.8.7
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Cache refinery_cli
        uses: actions/cache@v2
        id: cache-refinery
        with:
          path: |
            ~/.cargo/bin/refinery
          key: ${{ runner.os }}-refinery-${{ env.REFINERY_VERSION }}

      - name: Install refinery_cli
        uses: actions-rs/cargo@v1
        if: steps.cache-refinery.outputs.cache-hit == false
        with:
          command: install 
          args: >
            refinery_cli
            --force
            --version=${{ env.REFINERY_VERSION }}
            --locked
      - name: Migrate database
        run: |
          sudo apt-get install libpq-dev -y
          SKIP_DOCKER=true ./scripts/init_db.sh
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.2
        with:
          args: '--ignore-tests --avoid-cfg-tarpaulin'
